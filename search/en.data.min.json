[{"id":0,"href":"/improvingapp/accounting/","title":"accounting","parent":"ImprovingApp","content":" Context \u0026lsquo;accounting\u0026rsquo; Entities BillingAccount PaymentAccount "},{"id":1,"href":"/improvingapp/accounting/billingaccount/","title":"BillingAccount","parent":"accounting","content":" Entity \u0026lsquo;BillingAccount\u0026rsquo; States "},{"id":2,"href":"/improvingapp/calendars/","title":"Calendars","parent":"ImprovingApp","content":" Context \u0026lsquo;Calendars\u0026rsquo; "},{"id":3,"href":"/improvingapp/commerce/cart/","title":"Cart","parent":"Commerce","content":" Entity \u0026lsquo;Cart\u0026rsquo; States "},{"id":4,"href":"/improvingapp/vendor/catalog/","title":"Catalog","parent":"Vendor","content":" Entity \u0026lsquo;Catalog\u0026rsquo; States Catalog Fields catalogId: Reference To CatalogId name: String products: Reference To ProductId+ Handlers CatalogHandler "},{"id":5,"href":"/improvingapp/vendor/category/","title":"Category","parent":"Vendor","content":" Entity \u0026lsquo;Category\u0026rsquo; States Category Fields categoryId: Reference To CategoryId name: String products: Reference To ProductId+ Handlers CategoryHandler "},{"id":6,"href":"/improvingapp/commerce/","title":"Commerce","parent":"ImprovingApp","content":" Context \u0026lsquo;Commerce\u0026rsquo; Types PromotionId: Id(Promotion)\nPromotionInfo: Aggregation\nPaymentId: Id(Payment)\nLineItem: Aggregation\nOrderId: Id(Order)\nOrderInfo: Aggregation\nDeliveryId: Id(Delivery)\nDeliveryInfo: Aggregation\nEntities Promotion PaymentProvider Payment Cart Order Delivery "},{"id":7,"href":"/improvingapp/commerce/delivery/","title":"Delivery","parent":"Commerce","content":" Entity \u0026lsquo;Delivery\u0026rsquo; States Pending Fields Ready Fields EnRoute Fields Delivered Fields Handlers PendingDeliveryHandler ReadyDeliveryHandler EnRoutDeliveryHandler DeliveredDeliveryHandler "},{"id":8,"href":"/improvingapp/event/","title":"Event","parent":"ImprovingApp","content":" Context \u0026lsquo;Event\u0026rsquo; Types EventInfo: Aggregation Entities Event "},{"id":9,"href":"/improvingapp/event/event/","title":"Event","parent":"Event","content":" Entity \u0026lsquo;Event\u0026rsquo; Options aggregate() States Scheduled Fields eventId: Reference To EventId eventInfo: Reference To EventInfo InProgress Fields eventInfo: Reference To EventInfo Past Fields eventInfo: Reference To EventInfo Cancelled Fields eventInfo: Reference To EventInfo Handlers ScheduledEventHandler InProgressEventHandler PastEventHandler CancelledEventHandler "},{"id":10,"href":"/improvingapp/","title":"ImprovingApp","parent":"Top Index","content":" Domain \u0026lsquo;ImprovingApp\u0026rsquo; Details The Improving App is a platform that is intended to unify the various commerce and calendaring activities for complex organizations such as high schools. We find that often these organizations have many pressing needs that take priority over these \u0026ldquo;minor\u0026rdquo; details. Events and the vending that happens at them often bring sorely needed revenue into the organization, are neglected and become subject to conflict and infighting, have high organizational leadership turnover (think PTO President or Booster Club President), and leaves administration frustrated, confused, and distrusting. Because of this distrust, many processes and controls are instituted that frustrate and complicate volunteer leadership that ultimately prevent them from doing a better job for the school.\nBeyond the obvious need that a platform such as this fills, we also think that it is a tremendous asset to provide students at a high school real-world business experience. Imagine if a group of teachers, administrators, and staff became a board of directors that selected each year, from the student body, a CEO, CTO, CMO, CFO, etc. Imagine these students leaving high school with a resume that, beyond a high school diploma, details their involvement with these businesses; how they increased attendance at school events, how they improved margin, how they attracted more sponsors, how they managed staff, how they improved efficiency, how they planned inventory, and so on.\nImprovingApp is a reference application for YoppWorks/Improving. It demonstrates the very best of Reactive Architecture, Domain Driven Design (DDD), Distributed Computing, Cloud Native Deployment, CI/CD, Agile Development, RIDDL, Test Automation, and Actor Systems (Akka, Vert.X, Spring, etc.). Inherint in this reference application is the ability to stand up demo sites quickly so that we can demonstrate to potential clients the advantages of YoppWorks/Improving preferred technologies and practices. We should be able to demonstrate clearly through real life metrics (number of users, number of orders processed, number of organizations supported, elasticity, etc.) the value of the platform and the technologies and processes used to implement it. We should be able to demonstrate through chaos engineering the responsiveness, resiliance, and elasticity of the technologies used in implementing the platform. The reference application will also be used in training curricula on the above technologies and processes for YoppWorks/Improving.\nWe think this platform could further be monitized (beyond the secondary education market) to include collegiate environments, professional athletics, grass roots events like farmer\u0026rsquo;s markets and craft fairs, food trucks, on-line ordering for restaurants, merch sales for concerts, and so on. The key unifying characteristics include one or more of the following:\ne-commerce activity where delivery of purchased goods is taken in person, there is a series of events that must be calendared and coordinated, audiences to engage (sponsorships, advertised promotions, information shared, and so on), or staff to be sheduled and coordinated. The languages, frameworks, and platforms used to develop ImprovingApp include the following:\nUI: Framework: Dart/Flutter Targets: PWA, Android, iOS, Mac, Windows CDN: Google BE: Languages: Scala, Java, Python, JavaScript (TypeScript and other variants), F#, C# Actor Models: Akka, Akka.NET, Kalix (Akka Serverless) Design: Polyglot Microservices, Possibly with Node? Messaging: gRPC/ProcolBuffers, Google Pub/Sub Runtime: GraalVM/11, Akka.NET 6 Infrastructure: GKE Kubernetes Databases: Cassandra for Event Sourcing, Postgres/MySQL/Neo4J for views/projections To summarize the motivations behind the development of the ImprovingApp:\nA full open-source, cloud-native, reactive microservices-based demonstrantion for What it is that we do at Improving Ottawa. The basis for all reactive, actor, development, DevOps, etc. training courses Improving Ottawa offers Improving-Ottawa\u0026rsquo;s conscious capitalism contribution 24X7 running sales demonstration application Demonstrate solutions to complex problems: rolling upgrades, rapid continuous deployment, agile development, sharding, reactive, \u0026hellip; A continuously evolving context for exploring new technologies (WEb 3.0, cryptocurrency, NFT, Self-Sovereign Identity (SSI), IoT, Chaos Engineering/Chaos Monkey, Machine Learning, Predictive Analytics, Recommender Systems). Also a context to explore solutions to address evolving regulatory and compliance issues like privacy law (GDPR, PIPEDA, CCPA, etc.) At least self-sustaining non-profit results (but not antagonistic to making a profit!) Utilize bench effectively Provides many examples of design/architecture patterns Peer-reviewed high-quality software An example that promotes FOMO and dissipates FUD MVP: A fully fledged \u0026ldquo;demo only\u0026rdquo; version that does not support real CC transactions, nor real events, but simulates such things to provide a very capable training/demonstration application. This should be centered around a fictitions organization (name needed. Ideas that have been proposed include Hogwarts, Whoville High, etc.) that operates in demo mode, and separately from \u0026ldquo;real\u0026rdquo; or \u0026ldquo;live\u0026rdquo; organizations and their events.\nConscious Capitalism There are many threads of Conscious Capitalism built into this application, particularly when applied to a secondary education context (or even post-secondary). Here are some ideas\nThis application is a learning platform. Students wanting to learn how modern applications are built could analyze this application as a case study. Students could be encouraged to extend and customize the application - increasing their learning and application Students could look at data generated by the application to learn about marketing, supply chain management, commerce, event management, communications, etc. This application is real It manages functioning businesses that operate under the Root Organization These businesses are limited in scope so damages from mismanagement are limited. School Administrators (board of directors) could appoint from the student body each year a CEO, CFO, CMO, CTO to manage these businesses with oversight from the board. "},{"id":11,"href":"/improvingapp/inventorydomain/","title":"InventoryDomain","parent":"ImprovingApp","content":" Domain \u0026lsquo;InventoryDomain\u0026rsquo; Contexts ProductInventory "},{"id":12,"href":"/improvingapp/venuecontext/location/","title":"Location","parent":"VenueContext","content":" Entity \u0026lsquo;Location\u0026rsquo; States "},{"id":13,"href":"/improvingapp/members/member/","title":"Member","parent":"Members","content":" Entity \u0026lsquo;Member\u0026rsquo; Options aggregate() States Active Fields memberId: Reference To MemberId memberInfo: Reference To MemberInfo Guest Fields memberId: Reference To MemberId Inactive Fields memberId: Reference To MemberId memberInfo: Reference To MemberInfo Suspended Fields memberId: Reference To MemberId memberInfo: Reference To MemberInfo Terminated Fields memberId: Reference To MemberId Handlers ActiveMemberHandler GuestMemberHandler InactiveMemberHandler SuspendedMemberHandler TerminagedMemberHandler "},{"id":14,"href":"/improvingapp/members/","title":"Members","parent":"ImprovingApp","content":" Context \u0026lsquo;Members\u0026rsquo; Types MemberId: Id(Member)\nMemberType: Enumeration\nMemberInfo: Aggregation\nRegisterMember: command\nRegisterMemberList: command\nMemberRegistered: event\nUpdateMemberInfo: command\nMemberInfoUpdated: event\nActivateMember: command\nMemberActivated: event\nInactivateMember: command\nMemberInactivated: event\nSuspendMember: command\nMemberSuspended: event\nTerminateMember: command\nMemberTerminated: event\nEntities Member "},{"id":15,"href":"/improvingapp/commerce/order/","title":"Order","parent":"Commerce","content":" Entity \u0026lsquo;Order\u0026rsquo; States Placed Fields InProcess Fields Ready Fields Delivered Fields Cancelled Fields Handlers PlacedOrderHandler InProcessOrderHandler ReadyOrderHandler DeliveredOrderHandler CancelledOrderHandler "},{"id":16,"href":"/improvingapp/organizationcontext/organization/","title":"Organization","parent":"OrganizationContext","content":" Entity \u0026lsquo;Organization\u0026rsquo; Details The Organization bounded context is responsible for the definition of various organizational entities and the relationships between organizations. In this RIDDL definition we have only provided a single definition for Organization. However, as visualize Organization there are two types of organizations: BaseOrganizations and SubOrganizations. The BaseOrganization has no parent and is the financially responsible entity. There is exactly one BaseOrganization within an organizational structure. (Improving.App at large is designed as a multi-tenant system so there could be multiple BaseOrganizations defined, but there is no relationship between BaseOrganizations). Licensing and processing fees are paid by the BaseOrganization and revenue from sales activities are paid back to the BaseOrganization (who may decide if/how to distribute those funds to their SubOrganizations). Every other Organization within the structure is necessarily a SubOrganization.\nFor the remainder of this document we will either use Organization generically or we will provide a more specific term to make clear the \u0026ldquo;roles\u0026rdquo; of organizations in various contexts. For example, Parent Organization and Child Organization are useful terms to describe the relationship between two organizations. Organizations are arranged in a tree-like structure with the BaseOrganization at the base of that structure. A child organization is a subset of a parent organization. For example, you may have a Football team organization (parent), that has child organizations of Varsity, Junior Varsity, Sophomore, and Freshman teams. A Parent Organization could be a Child to yet another Organization. Another way to say this is, being a Parent Organization does not necessarily mean it is also a BaseOrganization.\nOrganizations can be in one of the following states:\nDraft: an organization that is in process of being defined. Active: an organization that is fully defined and currently in use. Inactive: an organization that may be fully defined but is not in use. This state is typically self induced, for example, the school year ends. Suspended: an organzation that is non-functioning because of violation of terms, non-payment, or similar reason. If these concerns are remedied the organizaton may be moved back to active status by a BaseOrganization Admin. Terminated: an organization that is non-functioning and will not or cannot be brought back to active status. Typically, only the organization ID and Name are retained to maintain internal consistency. States Draft Fields oid: Reference To OrganizationId orgDetails: Reference To OrganizationInfo Active Fields oid: Reference To OrganizationId orgDetails: Reference To OrganizationInfo Inactive Fields oid: Reference To OrganizationId orgDetails: Reference To OrganizationInfo Suspended Fields oid: Reference To OrganizationId orgDetails: Reference To OrganizationInfo Terminated Fields oid: Reference To OrganizationId name: String Handlers DraftOrganizationHandler ActiveOrganization InactiveOrganization SuspendedOrganization TerminatedOrganization "},{"id":17,"href":"/improvingapp/organizationcontext/","title":"OrganizationContext","parent":"ImprovingApp","content":" Context \u0026lsquo;OrganizationContext\u0026rsquo; Types OrganizationInfo: Aggregation\nEstablishOrganization: command\nOrganizationEstablished: event\nEditOrganizationInfo: command\nOrganizationInfoUpdated: event\nActivateOrganization: command\nOrganizationActivated: event\nInactivateOrganization: command\nOrganizationInactivated: event\nSuspendOrganization: command\nOrganizationSuspended: event\nTerminateOrganization: command\nOrganizationTerminated: event\nGuest: Aggregation\nEntities Organization "},{"id":18,"href":"/improvingapp/commerce/payment/","title":"Payment","parent":"Commerce","content":" Entity \u0026lsquo;Payment\u0026rsquo; States Payment Fields paymentId: Reference To PaymentId orderId: Reference To OrderId amount: Number dateProcessed: DateTime Handlers PaymentHandler "},{"id":19,"href":"/improvingapp/accounting/paymentaccount/","title":"PaymentAccount","parent":"accounting","content":" Entity \u0026lsquo;PaymentAccount\u0026rsquo; States "},{"id":20,"href":"/improvingapp/commerce/paymentprovider/","title":"PaymentProvider","parent":"Commerce","content":" Entity \u0026lsquo;PaymentProvider\u0026rsquo; States "},{"id":21,"href":"/improvingapp/vendor/product/","title":"Product","parent":"Vendor","content":" Entity \u0026lsquo;Product\u0026rsquo; States Active Fields sku: String productInfo: Reference To ProductInfo Inactive Fields sku: String productInfo: Reference To ProductInfo Handlers ActiveProductHandler InactiveProductHandler "},{"id":22,"href":"/improvingapp/inventorydomain/productinventory/","title":"ProductInventory","parent":"InventoryDomain","content":" Context \u0026lsquo;ProductInventory\u0026rsquo; Entities ProductInventory "},{"id":23,"href":"/improvingapp/inventorydomain/productinventory/productinventory/","title":"ProductInventory","parent":"ProductInventory","content":" Entity \u0026lsquo;ProductInventory\u0026rsquo; States ActiveState Fields EmptyState Fields Handlers AvailableProductHandler EmptyStateHandler "},{"id":24,"href":"/improvingapp/commerce/promotion/","title":"Promotion","parent":"Commerce","content":" Entity \u0026lsquo;Promotion\u0026rsquo; States Active Fields Expired Fields Handlers ActivePromotionHandler InactivePromotionHandler "},{"id":25,"href":"/improvingapp/vendor/store/","title":"Store","parent":"Vendor","content":" Entity \u0026lsquo;Store\u0026rsquo; States Staged Fields storeId: Reference To StoreId storeInfo: Reference To StoreInfo Open Fields storeId: Reference To StoreId storeInfo: Reference To StoreInfo Closed Fields storeId: Reference To StoreId storeInfo: Reference To StoreInfo Handlers StagedStoreHandler OpenStoreHandler ClosedStoreHandler "},{"id":26,"href":"/","title":"Top Index","parent":"","content":" Domains ImprovingApp Indices Glossary To Do List "},{"id":27,"href":"/improvingapp/vendor/","title":"Vendor","parent":"ImprovingApp","content":" Context \u0026lsquo;Vendor\u0026rsquo; Types StoreId: Id(Store)\nCatalogId: Id(Catalog)\nCategoryId: Id(Category)\nProductId: Id(Product)\nVendorId: Id(Vendor)\nStoreInfo: Aggregation\nVendorInfo: Aggregation\nProductInfo: Aggregation\nEntities Vendor Store Catalog Category Product "},{"id":28,"href":"/improvingapp/vendor/vendor/","title":"Vendor","parent":"Vendor","content":" Entity \u0026lsquo;Vendor\u0026rsquo; States Draft Fields vendorId: Reference To VendorId vendorInfo: Reference To VendorInfo Active Fields vendorId: Reference To VendorId vendorInfo: Reference To VendorInfo Inactive Fields vendorId: Reference To VendorId vendorInfo: Reference To VendorInfo Suspended Fields vendorId: Reference To VendorId vendorInfo: Reference To VendorInfo Terminated Fields vendorId: Reference To VendorId Handlers DraftVendor ActiveVendorHandler InactiveVendor SuspendedVendorHandler TerminatedVendor "},{"id":29,"href":"/improvingapp/venuecontext/venue/","title":"Venue","parent":"VenueContext","content":" Entity \u0026lsquo;Venue\u0026rsquo; Options aggregate() States Available Fields venueId: Reference To VenueId orgId: Reference To OrganizationId name: String address: Reference To Address isAvailable: Boolean Handlers AvailableVenueHandler "},{"id":30,"href":"/improvingapp/venuecontext/","title":"VenueContext","parent":"ImprovingApp","content":" Context \u0026lsquo;VenueContext\u0026rsquo; Entities Venue Location "},{"id":31,"href":"/glossary/","title":"Glossary Of Terms","parent":"Top Index","content":" title: \u0026ldquo;Glossary Of Terms\u0026rdquo; weight: 999 description: \u0026ldquo;A generated glossary of terms\u0026rdquo; geekdocAnchor: true\nTerm Type Brief Path BillingAccount Entity \u0026ndash; ImprovingApp.accounting.BillingAccount Calendars Context \u0026ndash; ImprovingApp.Calendars Cart Entity \u0026ndash; ImprovingApp.Commerce.Cart Catalog Entity \u0026ndash; ImprovingApp.Vendor.Catalog Category Entity \u0026ndash; ImprovingApp.Vendor.Category Commerce Context \u0026ndash; ImprovingApp.Commerce Delivery Entity \u0026ndash; ImprovingApp.Commerce.Delivery Event Context \u0026ndash; ImprovingApp.Event Event Entity \u0026ndash; ImprovingApp.Event.Event ImprovingApp Domain \u0026ndash; ImprovingApp InventoryDomain Domain \u0026ndash; ImprovingApp.InventoryDomain Location Entity \u0026ndash; ImprovingApp.VenueContext.Location Member Entity \u0026ndash; ImprovingApp.Members.Member Members Context \u0026ndash; ImprovingApp.Members Order Entity \u0026ndash; ImprovingApp.Commerce.Order Organization Entity \u0026ndash; ImprovingApp.OrganizationContext.Organization OrganizationContext Context \u0026ndash; ImprovingApp.OrganizationContext Payment Entity \u0026ndash; ImprovingApp.Commerce.Payment PaymentAccount Entity \u0026ndash; ImprovingApp.accounting.PaymentAccount PaymentProvider Entity \u0026ndash; ImprovingApp.Commerce.PaymentProvider Product Entity \u0026ndash; ImprovingApp.Vendor.Product ProductInventory Context \u0026ndash; ImprovingApp.InventoryDomain.ProductInventory ProductInventory Entity \u0026ndash; ImprovingApp.InventoryDomain.ProductInventory.ProductInventory Promotion Entity \u0026ndash; ImprovingApp.Commerce.Promotion Store Entity \u0026ndash; ImprovingApp.Vendor.Store Vendor Context \u0026ndash; ImprovingApp.Vendor Vendor Entity \u0026ndash; ImprovingApp.Vendor.Vendor Venue Entity \u0026ndash; ImprovingApp.VenueContext.Venue VenueContext Context \u0026ndash; ImprovingApp.VenueContext accounting Context \u0026ndash; ImprovingApp.accounting "},{"id":32,"href":"/todolist/","title":"To Do List","parent":"Top Index","content":" Definitions With Missing Content Type \u0026lsquo;MobileNumber\u0026rsquo; At ImprovingApp Type \u0026lsquo;EmailAddress\u0026rsquo; At ImprovingApp Type \u0026lsquo;CAPostalCode\u0026rsquo; At ImprovingApp Type \u0026lsquo;USPostalCode\u0026rsquo; At ImprovingApp Type \u0026lsquo;PostalCode\u0026rsquo; At ImprovingApp Type \u0026lsquo;OrganizationId\u0026rsquo; At ImprovingApp Type \u0026lsquo;VenueId\u0026rsquo; At ImprovingApp Type \u0026lsquo;LocationId\u0026rsquo; At ImprovingApp Type \u0026lsquo;EventId\u0026rsquo; At ImprovingApp Type \u0026lsquo;BillingAccountId\u0026rsquo; At ImprovingApp Type \u0026lsquo;PaymentAccountId\u0026rsquo; At ImprovingApp Entity \u0026lsquo;BillingAccount\u0026rsquo; At ImprovingApp.accounting Entity \u0026lsquo;PaymentAccount\u0026rsquo; At ImprovingApp.accounting Context \u0026lsquo;Calendars\u0026rsquo; At ImprovingApp Type \u0026lsquo;PromotionId\u0026rsquo; At ImprovingApp.Commerce Type \u0026lsquo;PaymentId\u0026rsquo; At ImprovingApp.Commerce Type \u0026lsquo;OrderId\u0026rsquo; At ImprovingApp.Commerce Type \u0026lsquo;DeliveryId\u0026rsquo; At ImprovingApp.Commerce State \u0026lsquo;Active\u0026rsquo; At ImprovingApp.Commerce.Promotion State \u0026lsquo;Expired\u0026rsquo; At ImprovingApp.Commerce.Promotion Handler \u0026lsquo;ActivePromotionHandler\u0026rsquo; At ImprovingApp.Commerce.Promotion Handler \u0026lsquo;InactivePromotionHandler\u0026rsquo; At ImprovingApp.Commerce.Promotion Entity \u0026lsquo;PaymentProvider\u0026rsquo; At ImprovingApp.Commerce Handler \u0026lsquo;PaymentHandler\u0026rsquo; At ImprovingApp.Commerce.Payment Entity \u0026lsquo;Cart\u0026rsquo; At ImprovingApp.Commerce State \u0026lsquo;Placed\u0026rsquo; At ImprovingApp.Commerce.Order State \u0026lsquo;InProcess\u0026rsquo; At ImprovingApp.Commerce.Order State \u0026lsquo;Ready\u0026rsquo; At ImprovingApp.Commerce.Order State \u0026lsquo;Delivered\u0026rsquo; At ImprovingApp.Commerce.Order State \u0026lsquo;Cancelled\u0026rsquo; At ImprovingApp.Commerce.Order Handler \u0026lsquo;PlacedOrderHandler\u0026rsquo; At ImprovingApp.Commerce.Order Handler \u0026lsquo;InProcessOrderHandler\u0026rsquo; At ImprovingApp.Commerce.Order Handler \u0026lsquo;ReadyOrderHandler\u0026rsquo; At ImprovingApp.Commerce.Order Handler \u0026lsquo;DeliveredOrderHandler\u0026rsquo; At ImprovingApp.Commerce.Order Handler \u0026lsquo;CancelledOrderHandler\u0026rsquo; At ImprovingApp.Commerce.Order State \u0026lsquo;Pending\u0026rsquo; At ImprovingApp.Commerce.Delivery State \u0026lsquo;Ready\u0026rsquo; At ImprovingApp.Commerce.Delivery State \u0026lsquo;EnRoute\u0026rsquo; At ImprovingApp.Commerce.Delivery State \u0026lsquo;Delivered\u0026rsquo; At ImprovingApp.Commerce.Delivery Handler \u0026lsquo;PendingDeliveryHandler\u0026rsquo; At ImprovingApp.Commerce.Delivery Handler \u0026lsquo;ReadyDeliveryHandler\u0026rsquo; At ImprovingApp.Commerce.Delivery Handler \u0026lsquo;EnRoutDeliveryHandler\u0026rsquo; At ImprovingApp.Commerce.Delivery Handler \u0026lsquo;DeliveredDeliveryHandler\u0026rsquo; At ImprovingApp.Commerce.Delivery Handler \u0026lsquo;ScheduledEventHandler\u0026rsquo; At ImprovingApp.Event.Event Handler \u0026lsquo;InProgressEventHandler\u0026rsquo; At ImprovingApp.Event.Event Handler \u0026lsquo;PastEventHandler\u0026rsquo; At ImprovingApp.Event.Event Handler \u0026lsquo;CancelledEventHandler\u0026rsquo; At ImprovingApp.Event.Event State \u0026lsquo;ActiveState\u0026rsquo; At ImprovingApp.InventoryDomain.ProductInventory.ProductInventory State \u0026lsquo;EmptyState\u0026rsquo; At ImprovingApp.InventoryDomain.ProductInventory.ProductInventory Handler \u0026lsquo;AvailableProductHandler\u0026rsquo; At ImprovingApp.InventoryDomain.ProductInventory.ProductInventory Handler \u0026lsquo;EmptyStateHandler\u0026rsquo; At ImprovingApp.InventoryDomain.ProductInventory.ProductInventory Type \u0026lsquo;MemberId\u0026rsquo; At ImprovingApp.Members Handler \u0026lsquo;ActiveMemberHandler\u0026rsquo; At ImprovingApp.Members.Member Handler \u0026lsquo;GuestMemberHandler\u0026rsquo; At ImprovingApp.Members.Member Handler \u0026lsquo;InactiveMemberHandler\u0026rsquo; At ImprovingApp.Members.Member Handler \u0026lsquo;SuspendedMemberHandler\u0026rsquo; At ImprovingApp.Members.Member Handler \u0026lsquo;TerminagedMemberHandler\u0026rsquo; At ImprovingApp.Members.Member Type \u0026lsquo;Guest\u0026rsquo; At ImprovingApp.OrganizationContext Handler \u0026lsquo;DraftOrganizationHandler\u0026rsquo; At ImprovingApp.OrganizationContext.Organization Handler \u0026lsquo;ActiveOrganization\u0026rsquo; At ImprovingApp.OrganizationContext.Organization Handler \u0026lsquo;InactiveOrganization\u0026rsquo; At ImprovingApp.OrganizationContext.Organization Handler \u0026lsquo;SuspendedOrganization\u0026rsquo; At ImprovingApp.OrganizationContext.Organization Handler \u0026lsquo;TerminatedOrganization\u0026rsquo; At ImprovingApp.OrganizationContext.Organization Type \u0026lsquo;StoreId\u0026rsquo; At ImprovingApp.Vendor Type \u0026lsquo;CatalogId\u0026rsquo; At ImprovingApp.Vendor Type \u0026lsquo;CategoryId\u0026rsquo; At ImprovingApp.Vendor Type \u0026lsquo;ProductId\u0026rsquo; At ImprovingApp.Vendor Type \u0026lsquo;VendorId\u0026rsquo; At ImprovingApp.Vendor Handler \u0026lsquo;DraftVendor\u0026rsquo; At ImprovingApp.Vendor.Vendor Handler \u0026lsquo;ActiveVendorHandler\u0026rsquo; At ImprovingApp.Vendor.Vendor Handler \u0026lsquo;InactiveVendor\u0026rsquo; At ImprovingApp.Vendor.Vendor Handler \u0026lsquo;SuspendedVendorHandler\u0026rsquo; At ImprovingApp.Vendor.Vendor Handler \u0026lsquo;TerminatedVendor\u0026rsquo; At ImprovingApp.Vendor.Vendor Handler \u0026lsquo;StagedStoreHandler\u0026rsquo; At ImprovingApp.Vendor.Store Handler \u0026lsquo;OpenStoreHandler\u0026rsquo; At ImprovingApp.Vendor.Store Handler \u0026lsquo;ClosedStoreHandler\u0026rsquo; At ImprovingApp.Vendor.Store Handler \u0026lsquo;CatalogHandler\u0026rsquo; At ImprovingApp.Vendor.Catalog Handler \u0026lsquo;CategoryHandler\u0026rsquo; At ImprovingApp.Vendor.Category Handler \u0026lsquo;ActiveProductHandler\u0026rsquo; At ImprovingApp.Vendor.Product Handler \u0026lsquo;InactiveProductHandler\u0026rsquo; At ImprovingApp.Vendor.Product Handler \u0026lsquo;AvailableVenueHandler\u0026rsquo; At ImprovingApp.VenueContext.Venue Entity \u0026lsquo;Location\u0026rsquo; At ImprovingApp.VenueContext "},{"id":33,"href":"/tags/","title":"Tags","parent":"Top Index","content":""}]