context VenueContext is {
    include "venueTypeDefinitions"
    include "venueMessages"

    entity Venue is {
        options (event-sourced, available)

        handler VenueHandler is {
            on command EstablishVenue {
                then morph entity Venue to state Venue.Draft
                and "set copy venueId from the command to the Draft fields"
                and "set copy info from the command to the Draft fields"
                and "set copy locations from the command to the Draft fields"
                and "set copy owner from the command to the Draft fields"
                and "set VenueContext.MetaInfo(
                  createdOn=now(),
                  createdBy = @EstablishVenue.establishingMember,
                  lastUpdated=now(),
                  lastUpdatedBy=@EstablishVenue.establishingMember,
                  currentOwner = when @EstablishVenue.owner.isEmpty then @EstablishVenue.establishingMember else @EstablishVenue.owner,
                  currentStatus = VenueContext.Status.Draft)"
                and "yield event VenueEstablished(
                    venueId = @Draft.venueId,
                    info = @Draft.info,
                    locations = @Draft.locations,
                    meta = @Draft.meta
                )"
            }
            on other { then error "Only EstablishVenue command is allowed in the default state"}
        }

		    state Draft is {
		        fields {
		            venueId: VenueId,
		            venueInfo: VenueInfo,
		            locations: LocationId*,
		            venueMeta: VenueContext.MetaInfo
		        }
		        handler DraftVenue is {
		            on command EstablishVenue {
		                then error "Venue already established"
		            }
				        on command EditVenueInfo {
				            then "set Draft info fields to EditVenueInfo.info"
				            and "yield event VenueInfoUpdated"
				        }
				        on command UpdateVenueStatus {
		                // then morph entity Venue to state @UpdateVenueStatus.status
		                then set Draft.meta.currentStatus to @UpdateVenueStatus.status
		                and set Draft.meta.lastUpdatedBy to @UpdateVenueStatus.updatingMember
		                and set Draft.meta.lastUpdated to now()
		                and yield event UpdateVenueStatus(venueId=@Draft.orgId, info=@Draft.info, meta=@Draft.meta)
		            }
			      }
	      }

		    state Open is {
		        fields {
		            venueId: VenueId,
		            venueInfo: VenueInfo,
		            locations: LocationId+ briefly "Venues must have at least 1 location to be considered Available",
		            venueMeta: VenueContext.MetaInfo
		        }
		        handler OpenVenue is {
		            on command EstablishVenue {
		                then error "Venue already established"
		            }
			        on command EditVenueInfo {
			            then "set Open info fields to EditVenueInfo.info"
			            and "yield event VenueInfoUpdated"
			        }
			        on command UpdateVenueStatus {
	                // then morph entity Venue to state @UpdateVenueStatus.status
	                then set Open.meta.currentStatus to @UpdateVenueStatus.status
	                and set Open.meta.lastUpdatedBy to @UpdateVenueStatus.updatingMember
	                and set Open.meta.lastUpdated to now()
	                and yield event UpdateVenueStatus(venueId=@Open.orgId, info=@Open.info, meta=@Open.meta)
	            }
		        }
		    }

		    state Closed is {
		        fields {
		            venueId: VenueId,
		            orgId: OrganizationId,
		            locations: LocationId*,
		            venueMeta: VenueContext.MetaInfo
		        }
		        handler ClosedVenue is {
		            on command EstablishVenue {
		                then error "Venue already established"
		            }
				        on command EditVenueInfo {
				            then "set Closed info fields to EditVenueInfo.info"
				            and "yield event VenueInfoUpdated"
				        }
				        on command UpdateVenueStatus {
		                // then morph entity Venue to state @UpdateVenueStatus.status
		                then set Closed.meta.currentStatus to @UpdateVenueStatus.status
		                and set Closed.meta.lastUpdatedBy to @UpdateVenueStatus.updatingMember
		                and set Closed.meta.lastUpdated to now()
		                and yield event UpdateVenueStatus(venueId=@Closed.orgId, info=@Closed.info, meta=@Closed.meta)
		            }
		        }
		    }
    }
}