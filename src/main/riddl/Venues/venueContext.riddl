type VenueId is Id (ImprovingApp.Venues.VenueContext.Venue)
  briefly "Unique identifier for Venue Entity"

context VenueContext is {
    by author James by author Alex
    include "venueTypeDefinitions"
    include "venueMessages"
    include "venueProjections"

    entity Venue is {
        option event-sourced
        option available

        handler VenueHandler is {
            on command EstablishVenue {
              "morph Venue to Draft state"
              "Copy fields from the command into Draft fields"
              "adjust meta fields to reflect the change set"
              "yield event VenueEstablished"
            }
            on other {
              error "Only EstablishVenue command is allowed in the default state"
            }
        }

        record DraftState is {
            venueInfo: VenueContext.Info,
            locations: Venues.LocationId*,
            venueMeta: VenueContext.MetaInfo
        }
		    state Draft of Venue.DraftState is {
		        handler DraftVenue is {
		            on command EstablishVenue {
		              error "Venue already established"
		            }
				        on command EditVenueInfo {
				          "set Draft info fields to EditVenueInfo.info"
				          "yield event VenueInfoUpdated"
				        }
				        on command UpdateVenueStatus {
		              "morph Venue to the state provided in UpdateVenueStatus"
                  "set MetaInfo to capture change data"
                  "yield event VenueInfoUpdated"
		            }
				        on command AddVenueLocations {
		              "add the LocationIds provided in this command to Venue.locations"
                  "set MetaInfo to capture change data"
                  "yield event VenueInfoUpdated"
		            }
			      }
	      }

        record OpenState is {
            venueInfo: VenueContext.Info,
            locations: Venues.LocationId*,
            venueMeta: VenueContext.MetaInfo
        }
		    state Open of Venue.OpenState is {
		        handler OpenVenue is {
		            on command EstablishVenue {
		              error "Venue already established"
		            }
				        on command EditVenueInfo {
				          "set Open info fields to EditVenueInfo.info"
				          "yield event VenueInfoUpdated"
				        }
				        on command UpdateVenueStatus {
		              "morph Venue to the state provided in UpdateVenueStatus"
                  "set MetaInfo to capture change data"
                  "yield event VenueInfoUpdated"
		            }
				        on command AddVenueLocations {
		              "add the LocationIds provided in this command to Venue.locations"
                  "set MetaInfo to capture change data"
                  "yield event VenueInfoUpdated"
		            }
		        }
		    }

        record ClosedState is {
            orgId: OrganizationId,
            locations: Venues.LocationId*,
            venueMeta: VenueContext.MetaInfo
        }
		    state Closed of Venue.ClosedState is {
		        handler ClosedVenue is {
		            on command EstablishVenue {
		              error "Venue already established"
		            }
				        on command EditVenueInfo {
				          "set Closed info fields to EditVenueInfo.info"
				          "yield event VenueInfoUpdated"
				        }
				        on command UpdateVenueStatus {
		              "morph Venue to the state provided in UpdateVenueStatus"
                  "set MetaInfo to capture change data"
                  "yield event VenueInfoUpdated"
		            }
				        on command AddVenueLocations {
		              "add the LocationIds provided in this command to Venue.locations"
                  "set MetaInfo to capture change data"
                  "yield event VenueInfoUpdated"
		            }
		        }
		    }
    }
}
