command EstablishVenue is {
  venueId: VenueId briefly "A unique identifier for this Venue. This must be provided by the calling client.",
  info: VenueContext.Info briefly "Details about a venue required for it to exist. See VenueContext.Info for details.",
  establishingMember: MemberId briefly "The Id of the Member who is issuing the create command.",
  owner: MemberId? briefly "Used in the case that establishingMember is not the owner"
} briefly "Creates a Venue with all top-level fields, potentially without Locations"
described in file "establishVenue.md"
event VenueEstablished is {
  venueId: VenueId,
  info: VenueContext.Info,
  meta: VenueContext.MetaInfo
}

command EditVenueInfo is {
  venueId: VenueId briefly "The unique Id of the venue to create",
  newInfo: VenueContext.UpdateInfo briefly "The information about the venue",
  editingMember: MemberId briefly "Id of the member who is creating the venue"
} briefly "A command to edit the values of an Venue's Info "
described in file "editVenueInfo.md"
event VenueInfoUpdated is {
  venueId: VenueId,
  info: VenueContext.Info,
  meta: VenueContext.MetaInfo
}

command UpdateVenueStatus is {
  venueId: VenueId,
  status: VenueContext.Status,
  updatingMember: MemberId
}
event VenueStatusUpdated is {
  venueId: VenueId,
  newStatus: VenueContext.Status
}

command AddVenueLocations is {
  venueId: VenueId,
  locations: LocationId+
}
event VenueLocationsAdded is {
  venueId: VenueId,
  allLocation: LocationId+
}

query GetVenueInfo is {venueId: VenueId}
result VenueInfo is {
  venueId: VenueId,
  info: VenueContext.Info
}

query GetVenueCapacityOverview is {
	venueId: VenueId
} briefly "This will operate on a projection that provides the min and max capacity across locations in venues"
result VenueCapacityOverview is {
	venueId: VenueId,
  venueInfo: VenueContext.Info,
  capacityOverview: CapacityOverview
}