context OrganizationContext is {
    include "organizationTypeDefinitions"
    include "organizationMessages"
    include "organizationProjections"
    include "organizationSources"

    entity Organization is {
        options (event-sourced, available)

        handler OrganizationHandler is {
        on command EstablishOrganization {
            then morph entity Organization to state Organization.Draft
            and set Draft.orgId to @EstablishOrganization.orgId
            and set Draft.info to @EstablishOrganization.info
            // TODO: and set Draft.meta to ^^^^MetaInfo(createdOn=now(), createdBy = @EstablishOrganization.establishingMember, lastUpdated=now(), lastUpdatedBy=@EstablishOrganization.establishingMember, currentStatus=Status.Draft)
            and yield event OrganizationEstablished(orgId=@Draft.orgId, info=@Draft.nfo, meta=@Draft.meta)
        }
        on other { then error "Only EstablishOrganization command is allowed in the empty state"}
        }

        state Draft is {
            fields {
                orgId: OrganizationId,
                info: OrganizationContext.Info,
                meta: OrganizationContext.MetaInfo
            }
            handler DraftOrganizationHandler is {
                on command EstablishOrganization {
                    then error "Organization already established"
                }
                on command EditOrganizationInfo {
                    then set Draft.info to @EstablishOrganization.info
                    // and yield event OrganizationInfoUpdated(orgId=@Draft.orgId, orgInfo=@Draft.orgInfo, orgMetaInfo=@Draft.orgMetaInfo)
                    //TODO: turn this into a function and call function here
                }
                on command UpdateOrganizationStatus {
                    then set ^^.Draft.meta.currentStatus to @UpdateOrganizationStatus.status
                    and set ^^.Draft.meta.lastUpdatedBy to @UpdateOrganizationStatus.updatingMember
                    // TODO: and set ^^.Draft.meta.lastUpdated to now()
                    and yield event OrganizationInfoUpdated(orgId=@Draft.orgId, info=@Draft.info, meta=@Draft.meta)
                    // TODO: turn this into a function and call function here
                }
                on other { then error "No other commands allowed in Draft state" }
            }
        }
        

        state Active is {
            fields {
                oid: OrganizationId,
                orgDetails: OrganizationContext.Info
            }
            handler ActiveOrganization is {
                on command EstablishOrganization {
                    then error "Organization already established"
                }
                on command EditOrganizationInfo { ???
                    // then set Draft.orgInfo to @EstablishOrganization.orgInfo
                    // and yield event OrganizationInfoUpdated(orgId=@Draft.orgId, orgInfo=@Draft.orgInfo, orgMetaInfo=@Draft.orgMetaInfo)
                    //TODO: turn this into a function and call function here
                }
                on command UpdateOrganizationStatus { ???
                    // then set Draft.orgMetaInfo.status to @UpdateOrganizationStatus.status
                    // and set Draft.orgMetaInfo.lastUpdatedBy to @UpdateOrganizationStatus.updatingMember
                    // and set Draft.orgMetaInfo.lastUpdated to "today()"
                    // and yield event OrganizationInfoUpdated(orgId=@Draft.orgId, orgInfo=@Draft.orgInfo, orgMetaInfo=@Draft.orgMetaInfo)
                    //TODO: turn this into a function and call function here
                }
                on other { then error "No other commands allowed in Active state" }//TODO: We need to consider queries
            }
        }
        
        state Suspended is {
            fields {
                oid: OrganizationId,
                orgDetails: OrganizationContext.Info
            }
            handler SuspendedOrganization is {
                on command EstablishOrganization {
                    then error "Organization already established"
                }
                on command EditOrganizationInfo {
                    then error "Move organization to the Active status in order to edit OrganizationInfo."
                }
                on command UpdateOrganizationStatus { ???
                    // then set Draft.orgMetaInfo.status to @UpdateOrganizationStatus.status
                    // and set Draft.orgMetaInfo.lastUpdatedBy to @UpdateOrganizationStatus.updatingMember
                    // and set Draft.orgMetaInfo.lastUpdated to "today()"
                    // and yield event OrganizationInfoUpdated(orgId=@Draft.orgId, orgInfo=@Draft.orgInfo, orgMetaInfo=@Draft.orgMetaInfo)
                    //TODO: turn this into a function and call function here
                }
                on other { then error "No other commands allowed in Suspended state"}
            }
        }
        
        state Terminated is {
            fields {
                oid: OrganizationId,
                name: String
            }
            handler TerminatedOrganization is {
                on other {then error "No commands allowed in Terminated state"}
            }
        }
    }
} described in file "src/main/riddl/Organization/organization.md"
