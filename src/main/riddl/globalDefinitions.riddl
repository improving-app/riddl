// Copyright (c) 2022 Improving Inc.

type TimeRange is {
		start: TimeStamp,
		end: TimeStamp
}

// Contact Information
type MobileNumber is Pattern("\(([0-9]{3})\)([0-9]{3})-([0-9]{4})") described as "North American Phone Number standard"
type EmailAddress is Pattern("(?:[a-z0-9!#$%&'*+/=?^_`{|}~-](?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-])|\"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])\")@(?:(?:[a-z0-9](?:[a-z0-9-][a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-][a-z0-9])?|[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)])") described as "RFC 5322 official standard. See https://emailregex.com"
type CAPostalCode is Pattern("[A-Z]\d[A-Z]\d[A-Z]\d")
type USPostalCode is Pattern("\d{5}(-\d{4})?")
type PostalCode is one of { CAPostalCode, USPostalCode }
type Address is {
    line1: String,
    line2: String,
    city: String,
    stateProvince: String,
    country: String,
    postalCode: PostalCode
}
type Contact is {
    firstName: String,
    lastName: String,
    emailAddress: EmailAddress,
    phone: MobileNumber,
    userName: String
}

// Identifiers
// type BaseOrganizationId is Id (BaseOrganization)
// type SubOrganizationId is Id (SubOrganization)
// type OrganizationType is one of {BaseOrganizationId, SubOrganizationId}
type OrganizationId is Id (^OrganizationContext.Organization)
type VenueId is Id (^Venue.VenueContext.Venue)
type LocationId is Id (^Venue.LocationContext.Location)
type ReservationId is Id (^Venue.ReservationContext.Reservation)
type EventId is Id (^EventContext.Event)
type BillingAccountId is Id (^AccountingContext.BillingAccount)
type DistributionAccountId is Id (^AccountingContext.DistributionAccount)
type MemberId is Id(^MembersContext.Member)
type ReservationId is Id(^VenueContext.Reservation)
type TenantId is Id(ImprovingApp.TenantContext.Tenant)
