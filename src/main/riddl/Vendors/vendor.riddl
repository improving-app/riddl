context Vendor is {
    type StoreId is Id( Store )
    type CatalogId is Id( Catalog )
    type CategoryId is Id( Category )
    type ProductId is Id( Vendor.Product )
    type VendorId is Id( Vendor.Vendor )

    type StoreInfo is {
        storeName: String,
        catalogId: CatalogId,
        storeOpen: DateTime,
        storeClose: DateTime,
        associatedEvent: EventId,
        sponsoringOrg: OrganizationId,
        vendor: VendorId
    }
    type VendorInfo is {
        name: String,
        description: String?,
        contactName: String,
        contactPhone: MobileNumber,
        contactEmail: EmailAddress,
        vendorSince: Date?,
        expiration: Date?
    }
    type ProductInfo is {
        name: String,
        image: URL,
        description: String,
        price: Number,
        cost: Number,
        organization: OrganizationId
    }

    entity Vendor is {
        record DraftState is {
            vendorId: VendorId,
            vendorInfo: VendorInfo
        }
        state Draft of ^DraftState is {
            handler DraftVendor is {???}
        }

        record ActiveState is {
            vendorId: VendorId,
            vendorInfo: VendorInfo
        }
        state Active of ^ActiveState is {
            handler ActiveVendorHandler is {???}
        }
        record InactiveState is {
            vendorId: VendorId,
            vendorInfo: VendorInfo
        }
        state Inactive of ^InactiveState is {
            handler InactiveVendor is {???}
        }
        record SuspendedState is {
            vendorId: VendorId,
            vendorInfo: VendorInfo
        }
        state Suspended of ^SuspendedState is {
            handler SuspendedVendorHandler is {???}
        }
        record TerminatedState is {
            vendorId: VendorId
        }
        state Terminated of ^TerminatedState is {
            handler TerminatedVendor is {???}
        }
    }

    entity Store is {
        record StagedState is {
            storeId: StoreId,
            storeInfo: StoreInfo
        }
        state Staged of ^StagedState is {
            handler StagedStoreHandler is {???}
        }

        record OpenState is {
            storeId: StoreId,
            storeInfo: StoreInfo
        }
        state Open of ^OpenState is {
            handler OpenStoreHandler is {???}
        }

        record ClosedState  {
            storeId: StoreId,
            storeInfo: StoreInfo
        }
        state Closed of ^ClosedState is {
            handler ClosedStoreHandler is {???}
        }
    }

    entity Catalog is {
        record CatalogState is {
            catalogId: CatalogId,
            name: String,
            products: ProductId+
        }
        state Catalog of CatalogState is {
            handler CatalogHandler is {???}
        }
    }
    entity Category is {
        record CategoryState is {
            categoryId: CategoryId,
            name: String,
            products: ProductId+
        }
        state Category of ^CategoryState is {
            handler CategoryHandler is {???}
        }
    }
    entity Product is {

        record ActiveState is {
            sku: String,
            productInfo: ProductInfo
            //kits i.e. combo meal - future scope
            //condiments - catsup, mustard, jalapenos, etc. - future scope
        }
        state Active of ^ActiveState is {
            handler ActiveProductHandler is {???}
        }

        record InactiveState is {
            sku: String,
            productInfo: ProductInfo
            //kits i.e. combo meal
            //condiments - catsup, mustard, jalapenos, etc.
        }
        state Inactive of ^InactiveState is {
            handler InactiveProductHandler is {???}
        }
    }
}
