// epic OrderGatewayStories is { ??? }
//Order Gateway Stories
// TODO: Convert this file to epics/cases

/*
As a Member attending an Event I would like to buy my Ticket to the Event online
As a Member attending an Event I would like to buy my concession Products online
As a Vendor I would like to notify my Customer (Member) of Order status changes
As a Vendor I would like to notify Inventory about product loss (dropped hamburger)

//As a Member I would like to maintain my iAppCoins Account so that I can make purchases (funny money) (member has an iAppCoins Account)
//As a Member I can deposit iAppCoins into my account so I can spend them within the app
epic DepositCoins is {
  user Member wants to "deposit coins in iAppCoin Account"  so that "Member can buy things within ImprovingApp"
  case HappyPath {
    title "Deposit Coin"
    scope domain ImprovingApp
    interaction is {
      step from user Member "Deposit Coin" to user App
        with { briefly "Member clicks Deposit button on the deposit form" }
      step from user App send command Member.DepositCoin to user GatewayAPI //ImprovingApp.Gateway.MemberGateway.IAppCoinAccount
        with { briefly "App tells the Gateway to deposit coins to their iAppCoin Account" }
    }
    example "Deposit negative coin" {???}
    example "Deposit > 99 coin" {???}
    example "Deposit non-integer amount" {???}
  }
}

//As a Member I would like to withdraw coins from my iAppCoinsAccount so that I can purchase products/tickets from a store
epic WithdrawCoins is {
  user Member wants to "Withdraw coins from iAppCoin Account" so that "he can pay for items a Member purchases"
  case HappyPath {
    title "Withdraw Coin"
    scope domain ImprovingApp
    interaction is {
      step from user Member "Buy things" to user App
        briefly "Member clicks the buy button on the order page"
      step from user App send command Order.ProcessOrder to user GatewayAPI //ImprovingApp.Gateway.OrderGateway.Order
        briefly "App tells the Gateway to process the Order"
      step from user GatewayAPI send command Order.CreateOrder to ImprovingApp.Order
        briefly "Gateway creates the order in the Order Service"
      step from ImprovingApp.Order send command Store.CollectPayment to ImprovingApp.StoreContext.Store
        briefly "Store Authorized to Collect Payment"
      step from ImprovingApp.StoreContext.Store send DebitAccount to ImprovingApp.MemberContext.IAppCoinAccount
        briefly "Store Collects Payment"
      step from ImprovingApp.Member.IAppCoinAccount send event IAppCoinAccount.AccountDebited
        briefly "Payment was successfully made"
    }
    example "Insufficient Funds" is {???}
    example "Withdraw non-integer amount" is {???}
    example "Order failed" is {???} //or cancelled
  }
}
*/
