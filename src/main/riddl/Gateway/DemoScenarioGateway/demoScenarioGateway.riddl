context DemoScenarioGateway is {
  option gateway

  type StartScenario is command {
    numTenants: Integer,
    maxOrgsDepth: Integer,
    maxOrgsWidth: Integer,
    numMembersPerOrg: Integer,
    numEventsPerOrg: Integer
  } with {
  briefly "contains all parameters for a DemoScenario"
    described by {
      "all Integers must be > 0 and at least one TicketType must be provided"
      "maybe add: //ticketTypesPerEvent: TicketType+"
    }
  }
  type ScenarioStarted is event {
    tenants: TenantId+,
    orgsByTenant: mapping from TenantId to OrganizationId+,
    membersByOrg: mapping from OrganizationId to MemberId+,
    eventsByOrg: mapping from OrganizationId to EventId+,
    store: ImprovingApp.StoreContext.StoreId,
    ticketsByEvent: mapping from EventId to SKU+
  } with {
    briefly "contains all data created for a DemoScenario with inter-related references in key mapping provided"
  }
  type PurchaseProduct is command {
   productSku: ProductContext.SKU
  }

  type ProductPurchased is event {
   productSku: ProductContext.SKU,
   productInfo: ProductContext.ProductInfo,
   productMeta: ProductContext.ProductMetaInfo
  }
}
