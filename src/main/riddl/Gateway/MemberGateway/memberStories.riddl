//Member Gateway Stories
//As a person who would like to use the features of ImprovingApp I would like to register a new user account so that I can access those features
story RegisterMember is {
  capability is "Enroll the Member"
  benefit is "So Member can use ImprovingApp"
  author James is {
    name: "James Lovell"
    email: "james.lovell@improving.com"
  }
  case HappyPath is {
    title: "Register a new Member"
    scope domain ImprovingApp
    interaction is {
      step from user Member "RegisterMember" to user App
        briefly "Member clicks on the enroll button",
      step from app App send command Member.RegisterMember to user GatewayAPI //ImprovingApp.Gateway.MemberGateway.Member
        briefly "App tells the Gateway to enroll the member",
      step from context GatewayAPI "Register Member" to entity ImprovingApp.MemberContext.Member
        briefly "add new Member",
      step from entity ImprovingApp.MembersContext.Member "MemberRegistered" to pipe ImprovingApp.MembersContext.MemberEvents
        briefly "Member added in Draft state"
      step from pipe ImprovingApp.MemberContext.MemberEvents "MemberRegistered" to user App, briefly "reply with success event"
    }
    //example Foo is {...}
  }
} briefly "A story about registering a new Member in Improving.app"
  described as "This is the story of how a Member signs up in Improving.app"

//As a Member I would like to check the balance of my iAppCoins Account to see if I have enough coin to make a purchase
story GetIAppCoinBalance is {
  As user Member wants to "check the balance of my iAppCoins Account" so that "I can check to see if I have enough coin to make a purchase"
  // capability is "Check iAppCoinAccount Balance"
  // benefit is "To verify there is enough coin to make a purchase"
  case HappyPath {
    // title "Check Balance"
    // scope domain ImprovingApp
    // interaction is {
      step from user Member view AccountDetailsPage to app ImprovingAppUI
        briefly "Member loads Account Details page to view iAppCoinAccount balance"
    //}
    //where we need to define the application with its pages so we can refer to them
  } briefly ""
  described as ""
}

//As a Member of ImprovingApp I would like to subscribe to Event Update Stream so I can follow the progress of Events
story GetEventUpdates is {
  capability is "Member would like to receive event updates as notifications in their Inbox"
  benefit is "Member can stay up to date regarding the Event"
  case HappyPath is {
    title "Subscribe to Event Updates"
    scope domain ImprovingApp
    interaction is {???}
  }
}

//As a Member of ImprovingApp I would like to subscrbe to the Order Stream so I can track the progress of my Orders
story GetOrderUpdates is {
  capability is "Member would like to recieved notifications about thier Order status in their Inbox"
  benefit is "So they can know how their order is progressing toward completion"
  case HappyPath is {
    title "Subscribe to Order updates"
    scope domain ImprovingApp
    interaction is {???}
  }
}

//As a Member I would like to express interest in an Event that has not been Reserved
story IAmInterestedInAttending is {
  capability is "User Expresses interested in attending an Event that has not opened Ticket sales yet"
  beneift is "Get on the list of event notifications (like when tickets go on sale)"
  case HappyPath is {
    title "Want to Attend Event"
    scope domain ImprovingApp
    interaction is {
      step from user Member "find an event to attend" to user App
        briefly "Member searches for events"
      step from user App send query ImprovingApp.GatewayAPI.Event.GetEventsForOrg to user GatewayAPI
        briefly "App sends query parameters to Gateway"
      step from user GatewayAPI send response ImprovingApp.GatewayAPI.EventEventsForOrg to user App
        briefly "App gets upcoming Events that match the search criteria"
      step from user App "Display upcoming events" to user Member
        briefly "Member reviews the search results"
      step from user Member "Member clicks the Get Event Updates button" to user App
        briefly "Member indicates they are interested in attending the event"
      step from user App send command ImprovingApp.GatewayAPI.Event.AddToInterestedMembers to user GatewayAPI
        briefly "App tells the Gateway the Member is interested in attending the Event"
    }
  }
}
